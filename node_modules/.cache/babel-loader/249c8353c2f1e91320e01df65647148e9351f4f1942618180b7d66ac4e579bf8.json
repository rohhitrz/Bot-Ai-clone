{"ast":null,"code":"var _jsxFileName = \"/Users/rohitraaj/Desktop/botAi-clone/src/pages/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Stack, Typography } from '@mui/material';\nimport InitialChat from '../../components/InitialChat/InitialChat';\nimport ChatInput from '../../components/ChatInput/ChatInput';\nimport ChattingCard from '../../components/ChattingCard/ChattingCard';\nimport FeedbackModal from '../../components/FeedbackModal/FeedbackModal';\nimport { useEffect, useRef, useState } from 'react';\nimport data from '../../aiData/sampleData.json';\nimport { useOutletContext } from \"react-router-dom\";\nimport Navbar from '../../components/Navbar/Navbar';\nimport { ThemeContext } from '../../theme/ThemeContext';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const listRef = useRef(null);\n  const [chatId, setChatId] = useState(1);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const [scrollToBottom, setScrollToBottom] = useState(false);\n  const {\n    chat,\n    setChat\n  } = useOutletContext();\n  const {\n    mode\n  } = useContext(ThemeContext);\n\n  // GENERATING AI RESPONSE\n  const generateResponse = input => {\n    const response = data.find(item => input.toLowerCase() == item.question.toLowerCase());\n    let answer = \"Sorry, Did not understand your query!\";\n    if (response != undefined) {\n      answer = response.response;\n    }\n    setChat(prev => [...prev, {\n      type: 'Human',\n      text: input,\n      time: new Date(),\n      id: chatId\n    }, {\n      type: 'AI',\n      text: answer,\n      time: new Date(),\n      id: chatId + 1\n    }]);\n    setChatId(prev => prev + 2);\n  };\n\n  //AUTOSCROLL TO LAST ELEMENT\n  useEffect(() => {\n    var _listRef$current, _listRef$current$last;\n    (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : (_listRef$current$last = _listRef$current.lastElementChild) === null || _listRef$current$last === void 0 ? void 0 : _listRef$current$last.scrollIntoView();\n  }, [scrollToBottom]);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    height: '100vh',\n    justifyContent: 'space-between',\n    sx: {\n      '@media (max-width:767px)': {\n        background: mode == 'light' ? 'linear-gradient(#F9FAFA 60%, #EDE4FF)' : ''\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), chat.length == 0 && /*#__PURE__*/_jsxDEV(InitialChat, {\n      generateResponse: generateResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 34\n    }, this), chat.length > 0 && /*#__PURE__*/_jsxDEV(Stack, {\n      height: 1,\n      flexGrow: 0,\n      p: {\n        xs: 2,\n        md: 3\n      },\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      sx: {\n        overflowY: 'auto',\n        '&::-webkit-scrollbar': {\n          width: '10px'\n        },\n        '&::-webkit-scrollbar-track': {\n          boxShadow: 'inset 0 0 8px rgba(0,0,0,0.1)',\n          borderRadius: '8px'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          backgroundColor: 'rgba(151, 133, 186,0.4)',\n          borderRadius: '8px'\n        }\n      },\n      ref: listRef,\n      children: chat.map((item, index) => /*#__PURE__*/_jsxDEV(ChattingCard, {\n        details: item,\n        updateChat: setChat,\n        setSelectedChatId: setSelectedChatId,\n        showFeedbackModal: () => setShowModal(true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      generateResponse: generateResponse,\n      setScroll: setScrollToBottom,\n      chat: chat,\n      clearChat: () => setChat([])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FeedbackModal, {\n      open: showModal,\n      updateChat: setChat,\n      chatId: selectedChatId,\n      handleClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"bA5glNi/lFgWUokgNOxIZT77HLo=\", false, function () {\n  return [useOutletContext];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Box","Stack","Typography","InitialChat","ChatInput","ChattingCard","FeedbackModal","useEffect","useRef","useState","data","useOutletContext","Navbar","ThemeContext","useContext","jsxDEV","_jsxDEV","Home","_s","showModal","setShowModal","listRef","chatId","setChatId","selectedChatId","setSelectedChatId","scrollToBottom","setScrollToBottom","chat","setChat","mode","generateResponse","input","response","find","item","toLowerCase","question","answer","undefined","prev","type","text","time","Date","id","_listRef$current","_listRef$current$last","current","lastElementChild","scrollIntoView","height","justifyContent","sx","background","children","fileName","_jsxFileName","lineNumber","columnNumber","length","flexGrow","p","xs","md","spacing","overflowY","width","boxShadow","borderRadius","backgroundColor","ref","map","index","details","updateChat","showFeedbackModal","setScroll","clearChat","open","handleClose","_c","$RefreshReg$"],"sources":["/Users/rohitraaj/Desktop/botAi-clone/src/pages/Home/Home.jsx"],"sourcesContent":["import { Box, Stack, Typography } from '@mui/material';\r\nimport InitialChat from '../../components/InitialChat/InitialChat';\r\nimport ChatInput from '../../components/ChatInput/ChatInput';\r\nimport ChattingCard from '../../components/ChattingCard/ChattingCard';\r\nimport FeedbackModal from '../../components/FeedbackModal/FeedbackModal';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport data from '../../aiData/sampleData.json'\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport { ThemeContext } from '../../theme/ThemeContext';\r\nimport { useContext } from 'react';\r\n\r\nexport default function Home() {\r\n\r\n    const [showModal, setShowModal] = useState(false)\r\n    const listRef = useRef(null)\r\n    const [chatId, setChatId] = useState(1)\r\n    const [selectedChatId, setSelectedChatId] = useState(null)\r\n    const [scrollToBottom, setScrollToBottom] = useState(false)\r\n    const { chat, setChat } = useOutletContext();\r\n    const { mode } = useContext(ThemeContext)\r\n\r\n    // GENERATING AI RESPONSE\r\n    const generateResponse = (input) => {\r\n\r\n        const response = data.find(item => input.toLowerCase() == item.question.toLowerCase())\r\n\r\n        let answer = \"Sorry, Did not understand your query!\"\r\n\r\n        if (response != undefined) {\r\n            answer = response.response\r\n        }\r\n\r\n        setChat(prev => ([...prev,\r\n        {\r\n            type: 'Human',\r\n            text: input,\r\n            time: new Date(),\r\n            id: chatId\r\n        },\r\n        {\r\n            type: 'AI',\r\n            text: answer,\r\n            time: new Date(),\r\n            id: chatId + 1\r\n        }\r\n        ]))\r\n\r\n        setChatId(prev => prev + 2)\r\n\r\n    }\r\n\r\n    //AUTOSCROLL TO LAST ELEMENT\r\n    useEffect(() => {\r\n        listRef.current?.lastElementChild?.scrollIntoView()\r\n    }, [scrollToBottom])\r\n\r\n    return (\r\n        <Stack\r\n            height={'100vh'}\r\n            justifyContent={'space-between'}\r\n            sx={{\r\n                '@media (max-width:767px)': {\r\n                    background: mode == 'light' ? 'linear-gradient(#F9FAFA 60%, #EDE4FF)' : ''\r\n                }\r\n            }}\r\n        >\r\n\r\n            <Navbar />\r\n\r\n            {chat.length == 0 && <InitialChat generateResponse={generateResponse} />}\r\n\r\n            {chat.length > 0 && (\r\n                <Stack\r\n                    height={1}\r\n                    flexGrow={0}\r\n                    p={{ xs: 2, md: 3 }}\r\n                    spacing={{ xs: 2, md: 3 }}\r\n                    sx={{\r\n                        overflowY: 'auto',\r\n                        '&::-webkit-scrollbar': {\r\n                            width: '10px',\r\n                        },\r\n                        '&::-webkit-scrollbar-track': {\r\n                            boxShadow: 'inset 0 0 8px rgba(0,0,0,0.1)',\r\n                            borderRadius: '8px'\r\n                        },\r\n                        '&::-webkit-scrollbar-thumb': {\r\n                            backgroundColor: 'rgba(151, 133, 186,0.4)',\r\n                            borderRadius: '8px'\r\n                        }\r\n                    }}\r\n                    ref={listRef}\r\n                >\r\n                    {chat.map((item, index) => (\r\n                        <ChattingCard\r\n                            details={item}\r\n                            key={index}\r\n                            updateChat={setChat}\r\n                            setSelectedChatId={setSelectedChatId}\r\n                            showFeedbackModal={() => setShowModal(true)}\r\n                        />\r\n                    ))}\r\n                </Stack>\r\n            )}\r\n\r\n            <ChatInput generateResponse={generateResponse} setScroll={setScrollToBottom} chat={chat} clearChat={() => setChat([])} />\r\n\r\n            <FeedbackModal open={showModal} updateChat={setChat} chatId={selectedChatId} handleClose={() => setShowModal(false)} />\r\n        </Stack>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACtD,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,aAAa,MAAM,8CAA8C;AACxE,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,8BAA8B;AAC/C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMY,OAAO,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM;IAAEmB,IAAI;IAAEC;EAAQ,CAAC,GAAGlB,gBAAgB,CAAC,CAAC;EAC5C,MAAM;IAAEmB;EAAK,CAAC,GAAGhB,UAAU,CAACD,YAAY,CAAC;;EAEzC;EACA,MAAMkB,gBAAgB,GAAIC,KAAK,IAAK;IAEhC,MAAMC,QAAQ,GAAGvB,IAAI,CAACwB,IAAI,CAACC,IAAI,IAAIH,KAAK,CAACI,WAAW,CAAC,CAAC,IAAID,IAAI,CAACE,QAAQ,CAACD,WAAW,CAAC,CAAC,CAAC;IAEtF,IAAIE,MAAM,GAAG,uCAAuC;IAEpD,IAAIL,QAAQ,IAAIM,SAAS,EAAE;MACvBD,MAAM,GAAGL,QAAQ,CAACA,QAAQ;IAC9B;IAEAJ,OAAO,CAACW,IAAI,IAAK,CAAC,GAAGA,IAAI,EACzB;MACIC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAEV,KAAK;MACXW,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;MAChBC,EAAE,EAAEvB;IACR,CAAC,EACD;MACImB,IAAI,EAAE,IAAI;MACVC,IAAI,EAAEJ,MAAM;MACZK,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC;MAChBC,EAAE,EAAEvB,MAAM,GAAG;IACjB,CAAC,CACC,CAAC;IAEHC,SAAS,CAACiB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAE/B,CAAC;;EAED;EACAjC,SAAS,CAAC,MAAM;IAAA,IAAAuC,gBAAA,EAAAC,qBAAA;IACZ,CAAAD,gBAAA,GAAAzB,OAAO,CAAC2B,OAAO,cAAAF,gBAAA,wBAAAC,qBAAA,GAAfD,gBAAA,CAAiBG,gBAAgB,cAAAF,qBAAA,uBAAjCA,qBAAA,CAAmCG,cAAc,CAAC,CAAC;EACvD,CAAC,EAAE,CAACxB,cAAc,CAAC,CAAC;EAEpB,oBACIV,OAAA,CAACf,KAAK;IACFkD,MAAM,EAAE,OAAQ;IAChBC,cAAc,EAAE,eAAgB;IAChCC,EAAE,EAAE;MACA,0BAA0B,EAAE;QACxBC,UAAU,EAAExB,IAAI,IAAI,OAAO,GAAG,uCAAuC,GAAG;MAC5E;IACJ,CAAE;IAAAyB,QAAA,gBAGFvC,OAAA,CAACJ,MAAM;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAET/B,IAAI,CAACgC,MAAM,IAAI,CAAC,iBAAI5C,OAAA,CAACb,WAAW;MAAC4B,gBAAgB,EAAEA;IAAiB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEvE/B,IAAI,CAACgC,MAAM,GAAG,CAAC,iBACZ5C,OAAA,CAACf,KAAK;MACFkD,MAAM,EAAE,CAAE;MACVU,QAAQ,EAAE,CAAE;MACZC,CAAC,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MACpBC,OAAO,EAAE;QAAEF,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAC1BX,EAAE,EAAE;QACAa,SAAS,EAAE,MAAM;QACjB,sBAAsB,EAAE;UACpBC,KAAK,EAAE;QACX,CAAC;QACD,4BAA4B,EAAE;UAC1BC,SAAS,EAAE,+BAA+B;UAC1CC,YAAY,EAAE;QAClB,CAAC;QACD,4BAA4B,EAAE;UAC1BC,eAAe,EAAE,yBAAyB;UAC1CD,YAAY,EAAE;QAClB;MACJ,CAAE;MACFE,GAAG,EAAElD,OAAQ;MAAAkC,QAAA,EAEZ3B,IAAI,CAAC4C,GAAG,CAAC,CAACrC,IAAI,EAAEsC,KAAK,kBAClBzD,OAAA,CAACX,YAAY;QACTqE,OAAO,EAAEvC,IAAK;QAEdwC,UAAU,EAAE9C,OAAQ;QACpBJ,iBAAiB,EAAEA,iBAAkB;QACrCmD,iBAAiB,EAAEA,CAAA,KAAMxD,YAAY,CAAC,IAAI;MAAE,GAHvCqD,KAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACV,eAED3C,OAAA,CAACZ,SAAS;MAAC2B,gBAAgB,EAAEA,gBAAiB;MAAC8C,SAAS,EAAElD,iBAAkB;MAACC,IAAI,EAAEA,IAAK;MAACkD,SAAS,EAAEA,CAAA,KAAMjD,OAAO,CAAC,EAAE;IAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzH3C,OAAA,CAACV,aAAa;MAACyE,IAAI,EAAE5D,SAAU;MAACwD,UAAU,EAAE9C,OAAQ;MAACP,MAAM,EAAEE,cAAe;MAACwD,WAAW,EAAEA,CAAA,KAAM5D,YAAY,CAAC,KAAK;IAAE;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpH,CAAC;AAEhB;AAACzC,EAAA,CAnGuBD,IAAI;EAAA,QAOEN,gBAAgB;AAAA;AAAAsE,EAAA,GAPtBhE,IAAI;AAAA,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}