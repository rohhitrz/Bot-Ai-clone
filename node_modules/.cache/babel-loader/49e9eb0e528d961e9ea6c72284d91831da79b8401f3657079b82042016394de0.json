{"ast":null,"code":"var _jsxFileName = \"/Users/rohitraaj/Desktop/botAi-clone/src/components/ChatInput/ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport { TextField, Box, Button, Stack, Snackbar } from \"@mui/material\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput({\n  generateResponse,\n  setScroll,\n  chat,\n  clearChat\n}) {\n  _s();\n  const [input, setInput] = useState(\"Please Ask Your Question\");\n  const inputRef = useRef(null);\n  const [showSnackbar, setShowSnackBar] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    generateresponse(input);\n    setInput(\"\");\n    setScroll(prev => !prev);\n  };\n  const handleSave = () => {\n    const chat_history = JSON.parse(localStorage.getItem(\"chat\")) || [];\n    const date = new Date();\n    localStorage.setItem(\"chat\", JSON.stringify([{\n      chat: chat,\n      datetime: date\n    }, ...chat_history]));\n    clearChat();\n    setShowSnackBar(true);\n  };\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    flexShrink: 0,\n    px: {\n      xs: 0.5,\n      md: 3\n    },\n    pb: {\n      xs: 1,\n      md: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        spacing: {\n          xs: 0.5,\n          md: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"message your Bot AI\",\n          sx: {\n            flex: 1,\n            bgcolor: \"primary.light\",\n            borderRadius: 1,\n            \"& input\": {\n              fontSize: {\n                xs: 12,\n                md: 16\n              },\n              paddingLeft: {\n                xs: 1,\n                md: 2\n              },\n              paddingRight: {\n                xs: 1,\n                md: 2\n              }\n            }\n          },\n          value: input,\n          onChange: e => setInput(e.target.value),\n          required: true,\n          inputRef: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          sx: {\n            fontSize: {\n              xs: 12,\n              md: 16\n            },\n            \"@media (max-width:767px)\": {\n              minWidth: 0,\n              paddingLeft: 1.5,\n              paddingRight: 1.5\n            }\n          },\n          children: \"ASK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleSave,\n          disabled: !(chat && chat.length > 0) //check if chat exists and has items\n          ,\n          sx: {\n            fontSize: {\n              xs: 12,\n              md: 16\n            },\n            \"@media (max-width:767px)\": {\n              minWidth: 0,\n              paddingLeft: 1.5,\n              paddingRight: 1.5\n            }\n          },\n          children: [\"SAVE\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showSnackbar,\n      message: \"Chat Saved!\",\n      onClose: () => setShowSnackBar(false),\n      autoHideDuration: 5000,\n      action: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/history\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"See past conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInput, \"Gqcqdm9HYP7tV0qyhO//f8JB7jk=\");\n_c = ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["TextField","Box","Button","Stack","Snackbar","useEffect","useState","useRef","Link","jsxDEV","_jsxDEV","ChatInput","generateResponse","setScroll","chat","clearChat","_s","input","setInput","inputRef","showSnackbar","setShowSnackBar","handleSubmit","e","preventDefault","generateresponse","prev","handleSave","chat_history","JSON","parse","localStorage","getItem","date","Date","setItem","stringify","datetime","current","focus","flexShrink","px","xs","md","pb","children","component","onSubmit","direction","spacing","placeholder","sx","flex","bgcolor","borderRadius","fontSize","paddingLeft","paddingRight","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","variant","type","minWidth","onClick","disabled","length","open","message","onClose","autoHideDuration","action","to","size","_c","$RefreshReg$"],"sources":["/Users/rohitraaj/Desktop/botAi-clone/src/components/ChatInput/ChatInput.jsx"],"sourcesContent":["import { TextField, Box, Button, Stack, Snackbar } from \"@mui/material\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ChatInput({\n  generateResponse,\n  setScroll,\n  chat,\n  clearChat,\n}) {\n  const [input, setInput] = useState(\"Please Ask Your Question\");\n  const inputRef = useRef(null);\n  const [showSnackbar, setShowSnackBar] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    generateresponse(input);\n    setInput(\"\");\n    setScroll((prev) => !prev);\n  };\n\n  const handleSave = () => {\n    const chat_history = JSON.parse(localStorage.getItem(\"chat\")) || [];\n    const date = new Date();\n\n    localStorage.setItem(\n      \"chat\",\n      JSON.stringify([{ chat: chat, datetime: date }, ...chat_history])\n    );\n\n    clearChat();\n\n    setShowSnackBar(true);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  return (\n    <Box flexShrink={0} px={{ xs: 0.5, md: 3 }} pb={{ xs: 1, md: 3 }}>\n      <Box component={\"form\"} onSubmit={handleSubmit}>\n        <Stack direction={\"row\"} spacing={{ xs: 0.5, md: 2 }}>\n          <TextField\n            placeholder=\"message your Bot AI\"\n            sx={{\n              flex: 1,\n              bgcolor: \"primary.light\",\n              borderRadius: 1,\n              \"& input\": {\n                fontSize: { xs: 12, md: 16 },\n                paddingLeft: { xs: 1, md: 2 },\n                paddingRight: { xs: 1, md: 2 },\n              },\n            }}\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            required\n            inputRef={inputRef}\n          />\n\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              fontSize: { xs: 12, md: 16 },\n              \"@media (max-width:767px)\": {\n                minWidth: 0,\n                paddingLeft: 1.5,\n                paddingRight: 1.5,\n              },\n            }}\n          >\n            ASK\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            onClick={handleSave}\n            disabled={!(chat && chat.length > 0)}  //check if chat exists and has items\n            sx={{\n              fontSize: { xs: 12, md: 16 },\n              \"@media (max-width:767px)\": {\n                minWidth: 0,\n                paddingLeft: 1.5,\n                paddingRight: 1.5,\n              },\n            }}\n          >\n            SAVE{\" \"}\n          </Button>\n        </Stack>\n      </Box>\n\n      <Snackbar\n        open={showSnackbar}\n        message={\"Chat Saved!\"}\n        onClose={() => setShowSnackBar(false)}\n        autoHideDuration={5000}\n        action={\n          <Link to=\"/history\">\n            <Button size=\"small\">See past conversations</Button>\n          </Link>\n        }\n      />\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}