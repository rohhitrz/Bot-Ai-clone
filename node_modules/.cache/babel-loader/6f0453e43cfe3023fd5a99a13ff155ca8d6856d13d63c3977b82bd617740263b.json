{"ast":null,"code":"var _jsxFileName = \"/Users/rohitraaj/Desktop/botAi-clone/src/components/ChatHistoryCard/ChatHistoryCard.jsx\";\nimport { Box, Typography, Stack, Divider, Chip } from '@mui/material';\nimport { format, isEqual, startOfDay, add } from 'date-fns';\nimport ChattingCard from '../ChattingCard/ChattingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatHistoryCard({\n  details\n}) {\n  const formatDate = date => {\n    const today = startOfDay(new Date());\n    if (isEqual(date, today)) {\n      return `Today's chats`;\n    } else if (isEqual(today, add(date, {\n      days: 1\n    }))) {\n      return `Yesterday's chats`;\n    } else {\n      return format(date, 'do LLL yyyy');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      fontWeight: 700,\n      mb: 2,\n      children: formatDate(startOfDay(new Date(details.datetime)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: {\n        xs: 2,\n        md: 3\n      },\n      children: details.chat.map((item, index) => /*#__PURE__*/_jsxDEV(ChattingCard, {\n        details: item,\n        readOnly: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = ChatHistoryCard;\nvar _c;\n$RefreshReg$(_c, \"ChatHistoryCard\");","map":{"version":3,"names":["Box","Typography","Stack","Divider","Chip","format","isEqual","startOfDay","add","ChattingCard","jsxDEV","_jsxDEV","ChatHistoryCard","details","formatDate","date","today","Date","days","children","fontWeight","mb","datetime","fileName","_jsxFileName","lineNumber","columnNumber","spacing","xs","md","chat","map","item","index","readOnly","_c","$RefreshReg$"],"sources":["/Users/rohitraaj/Desktop/botAi-clone/src/components/ChatHistoryCard/ChatHistoryCard.jsx"],"sourcesContent":["import { Box, Typography, Stack, Divider, Chip } from '@mui/material'\r\nimport { format, isEqual, startOfDay, add } from 'date-fns'\r\nimport ChattingCard from '../ChattingCard/ChattingCard'\r\n\r\nexport default function ChatHistoryCard({ details }) {\r\n\r\n    const formatDate = (date) => {\r\n        const today = startOfDay(new Date())\r\n\r\n        if (isEqual(date, today)) {\r\n            return `Today's chats`\r\n        }\r\n        else if (isEqual(today, add(date, { days: 1 }))) {\r\n            return `Yesterday's chats`\r\n        }\r\n        else {\r\n            return format(date, 'do LLL yyyy')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography\r\n                fontWeight={700}\r\n                mb={2}\r\n            >\r\n                {formatDate(startOfDay(new Date(details.datetime)))}\r\n            </Typography>\r\n\r\n            <Stack spacing={{xs:2, md:3}}>\r\n\r\n                {details.chat.map((item, index) => (\r\n                    <ChattingCard details={item} readOnly={true} key={index} />\r\n                ))}\r\n\r\n            </Stack>\r\n\r\n        </Box>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,GAAG,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,QAAQ,eAAe;AACrE,SAASC,MAAM,EAAEC,OAAO,EAAEC,UAAU,EAAEC,GAAG,QAAQ,UAAU;AAC3D,OAAOC,YAAY,MAAM,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAEjD,MAAMC,UAAU,GAAIC,IAAI,IAAK;IACzB,MAAMC,KAAK,GAAGT,UAAU,CAAC,IAAIU,IAAI,CAAC,CAAC,CAAC;IAEpC,IAAIX,OAAO,CAACS,IAAI,EAAEC,KAAK,CAAC,EAAE;MACtB,OAAO,eAAe;IAC1B,CAAC,MACI,IAAIV,OAAO,CAACU,KAAK,EAAER,GAAG,CAACO,IAAI,EAAE;MAAEG,IAAI,EAAE;IAAE,CAAC,CAAC,CAAC,EAAE;MAC7C,OAAO,mBAAmB;IAC9B,CAAC,MACI;MACD,OAAOb,MAAM,CAACU,IAAI,EAAE,aAAa,CAAC;IACtC;EACJ,CAAC;EAED,oBACIJ,OAAA,CAACX,GAAG;IAAAmB,QAAA,gBACAR,OAAA,CAACV,UAAU;MACPmB,UAAU,EAAE,GAAI;MAChBC,EAAE,EAAE,CAAE;MAAAF,QAAA,EAELL,UAAU,CAACP,UAAU,CAAC,IAAIU,IAAI,CAACJ,OAAO,CAACS,QAAQ,CAAC,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAEbf,OAAA,CAACT,KAAK;MAACyB,OAAO,EAAE;QAACC,EAAE,EAAC,CAAC;QAAEC,EAAE,EAAC;MAAC,CAAE;MAAAV,QAAA,EAExBN,OAAO,CAACiB,IAAI,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BtB,OAAA,CAACF,YAAY;QAACI,OAAO,EAAEmB,IAAK;QAACE,QAAQ,EAAE;MAAK,GAAMD,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEd;AAACS,EAAA,GAnCuBvB,eAAe;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}